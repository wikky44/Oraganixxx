import 'bloc/notification_bloc.dart';import 'models/notification_model.dart';import 'package:flutter/material.dart';import 'package:organixxx/core/app_export.dart';import 'package:organixxx/presentation/home_one_page/home_one_page.dart';import 'package:organixxx/presentation/my_cart_page/my_cart_page.dart';import 'package:organixxx/widgets/app_bar/appbar_leading_image.dart';import 'package:organixxx/widgets/app_bar/appbar_title.dart';import 'package:organixxx/widgets/app_bar/custom_app_bar.dart';import 'package:organixxx/widgets/custom_bottom_bar.dart';
// ignore_for_file: must_be_immutable
class NotificationScreen extends StatelessWidget {NotificationScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<NotificationBloc>(create: (context) => NotificationBloc(NotificationState(notificationModelObj: NotificationModel()))..add(NotificationInitialEvent()), child: NotificationScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return BlocBuilder<NotificationBloc, NotificationState>(builder: (context, state) {return SafeArea(child: Scaffold(body: SizedBox(height: 798.v, width: double.maxFinite, child: Stack(alignment: Alignment.topCenter, children: [Align(alignment: Alignment.bottomCenter, child: Container(padding: EdgeInsets.symmetric(horizontal: 84.h, vertical: 192.v), decoration: AppDecoration.fillGray, child: Column(mainAxisSize: MainAxisSize.min, children: [Align(alignment: Alignment.centerRight, child: Padding(padding: EdgeInsets.only(left: 12.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.start, children: [Container(height: 10.adaptSize, width: 10.adaptSize, margin: EdgeInsets.only(top: 61.v, bottom: 92.v), decoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(5.h))), Container(height: 163.v, width: 137.h, margin: EdgeInsets.only(left: 22.h), child: Stack(alignment: Alignment.bottomRight, children: [Align(alignment: Alignment.topRight, child: Padding(padding: EdgeInsets.only(right: 21.h), child: Text("lbl2".tr, style: CustomTextStyles.bodyLargeInter))), Align(alignment: Alignment.bottomRight, child: Container(height: 6.adaptSize, width: 6.adaptSize, margin: EdgeInsets.only(bottom: 37.v), decoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(3.h)))), Align(alignment: Alignment.topLeft, child: Container(height: 4.adaptSize, width: 4.adaptSize, margin: EdgeInsets.only(left: 2.h, top: 6.v), decoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(2.h)))), CustomImageView(imagePath: ImageConstant.imgNoNotification, height: 156.v, width: 135.h, alignment: Alignment.center)])), Container(height: 10.adaptSize, width: 10.adaptSize, margin: EdgeInsets.only(left: 16.h, top: 61.v, bottom: 91.v), decoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(5.h)))]))), SizedBox(height: 34.v), Text("msg_no_notifications".tr, style: theme.textTheme.titleMedium), SizedBox(height: 2.v), Container(width: 175.h, margin: EdgeInsets.symmetric(horizontal: 16.h), child: Text("msg_it_seems_like_you".tr, maxLines: 2, overflow: TextOverflow.ellipsis, style: CustomTextStyles.bodySmallLight)), SizedBox(height: 83.v)]))), _buildAppBar(context)])), bottomNavigationBar: _buildBottomBar(context)));}); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 70.v, leadingWidth: 35.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeft2, margin: EdgeInsets.only(left: 21.h, top: 40.v, bottom: 6.v), onTap: () {onTapArrowLeftTwo(context);}), title: AppbarTitle(text: "lbl_notification".tr, margin: EdgeInsets.only(left: 10.h, top: 32.v, bottom: 1.v)), styleType: Style.bgShadow_1); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homeOnePage; case BottomBarEnum.Iconlylightoutlinebag: return AppRoutes.myCartPage; case BottomBarEnum.Heart: return "/"; case BottomBarEnum.Profile: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.homeOnePage: return HomeOnePage.builder(context); case AppRoutes.myCartPage: return MyCartPage.builder(context); default: return DefaultWidget();} } 
/// Navigates to the homeOneContainerScreen when the action is triggered.
onTapArrowLeftTwo(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homeOneContainerScreen, ); } 
 }
